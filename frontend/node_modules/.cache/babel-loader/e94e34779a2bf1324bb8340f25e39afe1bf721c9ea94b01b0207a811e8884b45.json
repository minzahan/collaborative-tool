{"ast":null,"code":"var _jsxFileName = \"/frontend/src/pages/Register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, TextField, Box, Typography } from \"@mui/material\";\nimport { registerUser } from \"../api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const handleRegister = async () => {\n    setErrors({});\n    setMessage(\"\");\n    let hasError = false;\n\n    // Normalize username to lowercase for case-insensitivity\n    const normalizedUsername = username.trim().toLowerCase();\n\n    // Validate username\n    if (normalizedUsername.length < 3 || normalizedUsername.length > 50) {\n      setErrors(prev => ({\n        ...prev,\n        username: \"Username must be between 3 and 50 characters.\"\n      }));\n      hasError = true;\n    }\n\n    // Validate password\n    if (password.length < 6) {\n      setErrors(prev => ({\n        ...prev,\n        password: \"Password must be at least 6 characters long.\"\n      }));\n      hasError = true;\n    }\n    if (hasError) return;\n    try {\n      const response = await registerUser(normalizedUsername, password);\n      setMessage(\"Registration successful! Please login\");\n    } catch (error) {\n      setMessage(\"Registration failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Create a New Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      error: Boolean(errors.username),\n      helperText: errors.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      error: Boolean(errors.password),\n      helperText: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: handleRegister,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: message.includes(\"successful\") ? \"primary\" : \"error\",\n      style: {\n        marginTop: \"10px\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"Nc3AXNTR8wJlpA+i+5XwHXKsj6g=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Button","TextField","Box","Typography","registerUser","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","message","setMessage","errors","setErrors","handleRegister","hasError","normalizedUsername","trim","toLowerCase","length","prev","response","error","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","margin","value","onChange","e","target","Boolean","helperText","type","color","onClick","style","marginTop","includes","_c","$RefreshReg$"],"sources":["/frontend/src/pages/Register.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, TextField, Box, Typography } from \"@mui/material\";\nimport { registerUser } from \"../api/auth\";\n\nconst Register: React.FC = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [errors, setErrors] = useState<{ username?: string; password?: string }>({});\n\n    const handleRegister = async () => {\n        setErrors({});\n        setMessage(\"\");\n\n        let hasError = false;\n\n        // Normalize username to lowercase for case-insensitivity\n        const normalizedUsername = username.trim().toLowerCase();\n\n        // Validate username\n        if (normalizedUsername.length < 3 || normalizedUsername.length > 50) {\n            setErrors((prev) => ({\n                ...prev,\n                username: \"Username must be between 3 and 50 characters.\",\n            }));\n            hasError = true;\n        }\n\n        // Validate password\n        if (password.length < 6) {\n            setErrors((prev) => ({\n                ...prev,\n                password: \"Password must be at least 6 characters long.\",\n            }));\n            hasError = true;\n        }\n\n        if (hasError) return;\n\n        try {\n            const response = await registerUser(normalizedUsername, password);\n            setMessage(\"Registration successful! Please login\");\n        } catch (error) {\n            setMessage(\"Registration failed. Please try again.\");\n        }\n    };\n\n    return (\n        <Box>\n            <Typography variant=\"h6\" gutterBottom>\n                Create a New Account\n            </Typography>\n            <TextField\n                label=\"Username\"\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                error={Boolean(errors.username)}\n                helperText={errors.username}\n            />\n            <TextField\n                label=\"Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                error={Boolean(errors.password)}\n                helperText={errors.password}\n            />\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={handleRegister}\n                style={{ marginTop: \"10px\" }}\n            >\n                Register\n            </Button>\n            {message && (\n                <Typography\n                    variant=\"body2\"\n                    color={message.includes(\"successful\") ? \"primary\" : \"error\"}\n                    style={{ marginTop: \"10px\" }}\n                >\n                    {message}\n                </Typography>\n            )}\n        </Box>\n    );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}