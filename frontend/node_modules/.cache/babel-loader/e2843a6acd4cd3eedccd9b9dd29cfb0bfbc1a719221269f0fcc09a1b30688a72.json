{"ast":null,"code":"var _jsxFileName = \"/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [authToken, setAuthToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(Boolean(localStorage.getItem(\"authToken\")));\n  const login = (token, userData) => {\n    localStorage.setItem(\"authToken\", token);\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n    setAuthToken(token);\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"user\");\n    setAuthToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"authToken\");\n    if (storedUser && token) {\n      setUser(JSON.parse(storedUser));\n      setAuthToken(token);\n      setIsAuthenticated(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      authToken,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"MPpaCuD6r+B009OlRy0oVgSqQYc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","authToken","setAuthToken","isAuthenticated","setIsAuthenticated","Boolean","localStorage","getItem","login","token","userData","setItem","JSON","stringify","logout","removeItem","storedUser","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode, useEffect } from \"react\";\n\ninterface User {\n    username: string;\n}\n\ninterface AuthContextProps {\n    user: User | null;\n    isAuthenticated: boolean;\n    authToken: string | null;\n    login: (token: string, user: User) => void;\n    logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextProps | undefined>(undefined);\n\ninterface AuthProviderProps {\n    children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n    const [user, setUser] = useState<User | null>(null);\n    const [authToken, setAuthToken] = useState<string | null>(null);\n    const [isAuthenticated, setIsAuthenticated] = useState<boolean>(\n        Boolean(localStorage.getItem(\"authToken\"))\n    );\n\n    const login = (token: string, userData: User) => {\n        localStorage.setItem(\"authToken\", token);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        setAuthToken(token);\n        setUser(userData);\n        setIsAuthenticated(true);\n    };\n\n    const logout = () => {\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"user\");\n        setAuthToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n    };\n\n    useEffect(() => {\n        const storedUser = localStorage.getItem(\"user\");\n        const token = localStorage.getItem(\"authToken\");\n        if (storedUser && token) {\n            setUser(JSON.parse(storedUser));\n            setAuthToken(token);\n            setIsAuthenticated(true);\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ user, isAuthenticated, authToken, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAaC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAczF,MAAMC,WAAW,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAM1E,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAC/D,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAClDgB,OAAO,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAC7C,CAAC;EAED,MAAMC,KAAK,GAAGA,CAACC,KAAa,EAAEC,QAAc,KAAK;IAC7CJ,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;IACxCH,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;IACtDR,YAAY,CAACO,KAAK,CAAC;IACnBT,OAAO,CAACU,QAAQ,CAAC;IACjBN,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACjBR,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC;IACpCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/Bb,YAAY,CAAC,IAAI,CAAC;IAClBF,OAAO,CAAC,IAAI,CAAC;IACbI,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZ,MAAMyB,UAAU,GAAGV,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAME,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIS,UAAU,IAAIP,KAAK,EAAE;MACrBT,OAAO,CAACY,IAAI,CAACK,KAAK,CAACD,UAAU,CAAC,CAAC;MAC/Bd,YAAY,CAACO,KAAK,CAAC;MACnBL,kBAAkB,CAAC,IAAI,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEI,eAAe;MAAEF,SAAS;MAAEO,KAAK;MAAEM;IAAO,CAAE;IAAAjB,QAAA,EAC5EA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACzB,EAAA,CAtCWF,YAAyC;AAAA4B,EAAA,GAAzC5B,YAAyC;AAwCtD,OAAO,MAAM6B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGrC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACiC,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}